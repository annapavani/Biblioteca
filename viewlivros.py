# Form implementation generated from reading ui file 'ViewBook.ui'
#
# Created by: PyQt6 UI code generator 6.4.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt6 import QtCore, QtGui, QtWidgets
from PyQt6.QtWidgets import QTableWidgetItem, QDialogButtonBox
from PyQt6.QtWidgets import QMainWindow, QApplication, QDialog, QMessageBox, QFontDialog, QColorDialog, QDialogButtonBox
import mysql.connector as mc

class ViewLivros_Dialog(object):
    def setupUi(self, Dialog):
        Dialog.setObjectName("Dialog")
        Dialog.resize(600, 450)
        self.verticalLayout = QtWidgets.QVBoxLayout(Dialog)
        self.verticalLayout.setObjectName("verticalLayout")
        self.lineEdit = QtWidgets.QLineEdit(parent=Dialog)
        self.lineEdit.setMaximumSize(QtCore.QSize(16777215, 40))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.lineEdit.setFont(font)
        self.lineEdit.setObjectName("lineEdit")
        self.verticalLayout.addWidget(self.lineEdit)
        self.tableWidget = QtWidgets.QTableWidget(parent=Dialog)
        self.tableWidget.setStyleSheet("QTableWidget{\n"
"background-color:rgb(218,218,218);\n"
"}")
        self.tableWidget.setObjectName("tableWidget")
        self.tableWidget.setColumnCount(5)
        self.tableWidget.setRowCount(0)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(4, item)
        self.tableWidget.horizontalHeader().setDefaultSectionSize(110)
        self.verticalLayout.addWidget(self.tableWidget)
        self.pushButton = QtWidgets.QPushButton(parent=Dialog)
        font = QtGui.QFont()
        font.setPointSize(14)
        self.pushButton.setFont(font)
        self.pushButton.setStyleSheet("QPushButton{\n"
"background-color:rgb(218,218,218)\n"
"}\n"
"")
        self.pushButton.setObjectName("pushButton")
        self.verticalLayout.addWidget(self.pushButton)

        self.retranslateUi(Dialog)
        QtCore.QMetaObject.connectSlotsByName(Dialog)

        self.listar_livros()
        self.lineEdit.returnPressed.connect(self.buscar_livro)

        self.pushButton.clicked.connect(self.apagar_livro)

    def apagar_livro(self):
        livro = self.tableWidget.currentRow()
        if livro == -1:
            print("selecione um item")
            return
        dis = self.tableWidget.item(livro,4).text()
        if dis == "indisponivel":
            print("não está disponivel")
            return
        try:
            id = self.tableWidget.item(livro,0).text()
            id = id.replace('b0', '')
            print(self.tableWidget.item(livro,4).text())

            mydb = mc.connect(
                host="localhost",
                user="root",
                password="",
                database="biblioteca"
            )
            mycursor = mydb.cursor()
            query = "DELETE FROM livros WHERE id='"+id+"'"
            mycursor.execute(query)
            mydb.commit()

            self.listar_livros()

        except mc.Error as e:
            print("Error", e)


    def buscar_livro(self):
        string_busca = self.lineEdit.text()
        try:
            mydb = mc.connect(
                host="localhost",
                user="root",
                password="",
                database="biblioteca"
            )
            mycursor = mydb.cursor()
            if string_busca.find("b0") == 0:
                string_busca = string_busca.replace('b0', '')
                mycursor.execute("SELECT id, titulo, autoria, editora, disponivel FROM livros WHERE id like '"+string_busca+"%'")
            else:
                mycursor.execute("SELECT id, titulo, autoria, editora, disponivel FROM livros WHERE titulo like '"+string_busca+"%' or autoria like '"+string_busca+"%'")
            res = mycursor.fetchall()

            self.tableWidget.setRowCount(0)
            for num_linha, linha in enumerate(res):
                self.tableWidget.insertRow(num_linha)
                for num_col, item in enumerate(linha):
                    if num_col == 4:
                        item = "disponivel" if item == 1 else "indisponivel"
                    if num_col == 0:
                        item = 'b0'+str(item)
                    self.tableWidget.setItem(num_linha,num_col,QTableWidgetItem(str(item)))

        except mc.Error as e:
            print("Error", e)

    def listar_livros(self):
        try:
            mydb = mc.connect(
                host="localhost",
                user="root",
                password="",
                database="biblioteca"
            )
            mycursor = mydb.cursor()
            mycursor.execute("SELECT id, titulo, autoria, editora, disponivel FROM livros")
            res = mycursor.fetchall()

            self.tableWidget.setRowCount(0)
            for num_linha, linha in enumerate(res):
                self.tableWidget.insertRow(num_linha)
                for num_col, item in enumerate(linha):
                    if num_col == 4:
                        item = "disponivel" if item == 1 else "indisponivel"
                    if num_col == 0:
                        item = 'b0'+str(item)
                    self.tableWidget.setItem(num_linha,num_col, QTableWidgetItem(str(item)))

        except mc.Error as e:
            print("Error", e)

    def retranslateUi(self, Dialog):
        _translate = QtCore.QCoreApplication.translate
        Dialog.setWindowTitle(_translate("Dialog", "View Book"))
        self.lineEdit.setPlaceholderText(_translate("Dialog", "Busca"))
        item = self.tableWidget.horizontalHeaderItem(0)
        item.setText(_translate("Dialog", "ID"))
        item = self.tableWidget.horizontalHeaderItem(1)
        item.setText(_translate("Dialog", "Titulo"))
        item = self.tableWidget.horizontalHeaderItem(2)
        item.setText(_translate("Dialog", "Autoria"))
        item = self.tableWidget.horizontalHeaderItem(3)
        item.setText(_translate("Dialog", "Editora"))
        item = self.tableWidget.horizontalHeaderItem(4)
        item.setText(_translate("Dialog", "Disponivel"))
        self.pushButton.setText(_translate("Dialog", "Apagar"))
